##### TETRISSSSSSSSS

import pygame as pg
import random,time,sys
from pygame.locals import*

fps = 25
windowWidth, windowHeight = 600,500
block, cupHeight, cupWidth = 20,20,10
sideFreq,downFreq = 0.15,0.1
sideMargin = int((windowWidth-cupWidth*block)/2)
topMargin = windowHeight-(cupHeight*block)-5

colors = ((0,0,225),(0,225,0),(225,0,0),(225,225,0))
lightColors = ((30,30,255),(50,255,50),(255,30,30),(255,255,30))

white,gray,black = (255,255,255),(185,185,185),(0,0,0)
brdColor,bgColor,txtColor,titleColor,infoColor = white,black,white,colors[3],colors[0]


figWidth, figHeight = 5,5
empty = 'o'

figures = {
    'S': [['ooooo',
           'ooooo',
           'ooxxo',
           'oxxoo',
           'ooooo'],
          ['ooooo',
           'ooxoo',
           'ooxxo',
           'oooxo',
           'ooooo']],
    'Z': [['ooooo',
           'ooooo',
           'oxxoo',
           'ooxxo',
           'ooooo'],
          ['ooooo',
           'ooxoo',
           'oxxoo',
           'oxooo',
           'ooooo']],
    'J': [['ooooo',
           'oxooo',
           'oxxxo',
           'ooooo',
           'ooooo'],
          ['ooooo',
           'ooxxo',
           'ooxoo',
           'ooxoo',
           'ooooo'],
          ['ooooo',
           'ooooo',
           'oxxxo',
           'oooxo',
           'ooooo'],
          ['ooooo',
           'ooxoo',
           'ooxoo',
           'oxxoo',
           'ooooo']],
    'L': [['ooooo',
           'oooxo',
           'oxxxo',
           'ooooo',
           'ooooo'],
          ['ooooo',
           'ooxoo',
           'ooxoo',
           'ooxxo',
           'ooooo'],
          ['ooooo',
           'ooooo',
           'oxxxo',
           'oxooo',
           'ooooo'],
          ['ooooo',
           'oxxoo',
           'ooxoo',
           'ooxoo',
           'ooooo']],
    'I':[['ooxoo',
          'ooxoo',
          'ooxoo',
          'ooxoo',
          'ooooo'],
         ['ooooo',
          'ooooo',
          'xxxxo',
          'ooooo',
          'ooooo']],
    'O': [['ooooo',
           'ooooo',
           'oxxoo',
           'oxxoo',
           'ooooo']],
    'T': [['ooooo',
           'ooxoo',
           'oxxxo',
           'ooooo',
           'ooooo'],
          ['ooooo',
           'ooxoo',
           'ooxxo',
           'ooxoo',
           'ooooo'],
          ['ooooo',
           'ooooo',
           'oxxxo',
           'ooxoo',
           'ooooo'],
          ['ooooo',
           'ooxoo',
           'oxxoo',
           'ooxoo',
           'ooooo']]}

def pauseScreen():
    pause = pg.Surface((600,500),pg.SRCALPHA)
    pause.fill((0,0,255,127))
    displaySurf.blit(pause,(0,0))

def main():
    global fpsClock,displaySurf,basicFont,bigFont
    pg.init()
    fpsClock = pg.time.Clock()
    displaySurf = pg.display.set_mode((windowWidth,windowHeight))
    basicFont = pg.font.SysFont('arial',20)
    bigFont = pg.font.SysFont('verdana',45)
    pg.display.set_caption('Tetris lite')
    showText('Tetris lite')

    while True:
        runTetris()
        pauseScreen()
        showText('Game Over')

def runTetris():
    cup = emptyCup()
    lastMoveDown = time.time()
    lastSideMove = time.time()
    lastFall = time.time()
    goingDown = False
    goingLeft = False
    goingRight = False
    points = 0
    level, fallSpeed = calcSpeed(points)
    fallingFig = getNewFig()
    nextFig = getNewFig()

    while True:
        if fallingFig == None:
            fallingFig = nextFig
            nextFig = getNewFig()
            lastFall = time.time()

            if not checkPos(cup,fallingFig):
                return
        quitGame()

        for event in pg.event.get():
            if event.type == KEYUP:
                if event.key == K_SPACE:
                    pauseScreen()
                    showText('PAUSE')
                    lastFall = time.time()
                    lastMoveDown = time.time()
                    lastSideMove = time.time()
                elif event.key == K_LEFT:
                    goingLeft = False
                elif event.key == K_RIGHT:
                    goingRight = False
                elif event.key == K_DOWN:
                    goingDown = False
            elif event.type == KEYDOWN:
                if event.key == K_LEFT and checkPos(cup,fallingFig,adjX=-1):
                    fallingFig['x'] -=1
                    goingLeft = True
                    goingRight = False
                    lastSideMove = time.time()
                elif event.key == K_RIGHT and checkPos(cup,fallingFig,adjX=1):
                    fallingFig['x'] += 1
                    goingLeft = False
                    goingRight = True
                    lastSideMove = time.time()
                elif event.key == K_UP:
                    fallingFig['rotation'] = (fallingFig['rotation']+1) % len(figures[fallingFig['shape']])
